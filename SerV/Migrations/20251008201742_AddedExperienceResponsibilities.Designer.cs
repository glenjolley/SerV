// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SerV.DBContexts;

#nullable disable

namespace SerV.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20251008201742_AddedExperienceResponsibilities")]
    partial class AddedExperienceResponsibilities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SerV.Data.AccessCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("AccessCodes");
                });

            modelBuilder.Entity("SerV.Data.AccessCodeUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccessCodeId");

                    b.ToTable("AccessCodeUsageLog");
                });

            modelBuilder.Entity("SerV.Data.CV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LinkedIn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("SerV.Data.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<short?>("YearEnded")
                        .HasColumnType("smallint");

                    b.Property<short>("YearStarted")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("SerV.Data.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateEnded")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("SerV.Data.ExperienceResponsibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.ToTable("ExperienceResponsibilities");
                });

            modelBuilder.Entity("SerV.Data.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("ProficiencyLevel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CVId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SerV.Data.AccessCode", b =>
                {
                    b.HasOne("SerV.Data.CV", "CV")
                        .WithMany()
                        .HasForeignKey("CVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CV");
                });

            modelBuilder.Entity("SerV.Data.AccessCodeUsage", b =>
                {
                    b.HasOne("SerV.Data.AccessCode", "AccessCode")
                        .WithMany()
                        .HasForeignKey("AccessCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessCode");
                });

            modelBuilder.Entity("SerV.Data.Education", b =>
                {
                    b.HasOne("SerV.Data.CV", null)
                        .WithMany("Educations")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("SerV.Data.Experience", b =>
                {
                    b.HasOne("SerV.Data.CV", null)
                        .WithMany("Experiences")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("SerV.Data.ExperienceResponsibility", b =>
                {
                    b.HasOne("SerV.Data.Experience", null)
                        .WithMany("Responsibilities")
                        .HasForeignKey("ExperienceId");
                });

            modelBuilder.Entity("SerV.Data.Skills", b =>
                {
                    b.HasOne("SerV.Data.CV", null)
                        .WithMany("Skills")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("SerV.Data.CV", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("SerV.Data.Experience", b =>
                {
                    b.Navigation("Responsibilities");
                });
#pragma warning restore 612, 618
        }
    }
}
